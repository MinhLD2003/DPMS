@startuml

actor Admin
boundary "System User Assignment Screen" as Screen
participant "ExternalSystemController" as Controller
participant "ExternalSystemService" as Service
participant "ExternalSystemRepository" as SystemRepo
participant "GroupRepository" as GroupRepo
participant "UserService" as UserService
participant "IMediator" as Mediator
database "Database" as DB

Admin -> Screen : Submit user-group assignments
activate Screen
Screen -> Controller : UpdateSystemUsers(systemId, List<GroupUserVM>)
deactivate Screen
activate Controller

Controller -> Service : UpdateSystemUsers(systemId, groupUserVMs)
activate Service

' === Load external system with groups ===
Service -> SystemRepo : GetDetailAsync(systemId, includes: Groups)
activate SystemRepo
SystemRepo -> DB : Invoke [SELECT] [ExternalSystems]
activate DB
DB --> SystemRepo : ExternalSystem with groups
deactivate DB
SystemRepo --> Service : ExternalSystem
deactivate SystemRepo

alt system == null
    Service --> Controller : Error "System not found"
    
    Controller --> Screen : Show error
    
else process groups
    loop each GroupUserVM
        ' === Load group with users ===
        Service -> GroupRepo : GetDetailAsync(groupId, includes: Users)
        activate GroupRepo
        GroupRepo -> DB : Invoke [SELECT] [Groups]
        activate DB
        DB --> GroupRepo : Group with users
        deactivate DB
        GroupRepo --> Service : Group
        deactivate GroupRepo

        alt group == null
            Service --> Controller : Error "Group not found"
            Controller --> Screen : Show error
        end

        ' === Find new users to add ===
        Service -> UserService : FindAsync(UserId IN newUsers)
        activate UserService
        UserService -> DB : Invoke [SELECT] [Users]
        activate DB
        DB --> UserService : List<User>
        deactivate DB
        UserService --> Service : List<User>
        deactivate UserService

        alt newUsers exist
            Service -> GroupRepo : AddUserToGroup(groupId, newUserIds)
            activate GroupRepo
            GroupRepo -> DB : INSERT INTO GroupUsers
            activate DB
            DB --> GroupRepo : OK
            deactivate DB
            GroupRepo --> Service : Done
            deactivate GroupRepo

            loop each new user
                Service -> Mediator : Publish(UserAddedToSystemNotification)
                activate Mediator
                Mediator --> Service : OK
                deactivate Mediator
            end
        end

        alt removedUsers exist
            Service -> GroupRepo : DeleteUserFromGroup(groupId, removedUserIds)
            activate GroupRepo
            GroupRepo -> DB : DELETE FROM GroupUsers
            activate DB
            DB --> GroupRepo : OK
            deactivate DB
            GroupRepo --> Service : Done
            deactivate GroupRepo
        end
    end

    Service --> Controller : Done
    deactivate Service
    Controller --> Screen : Show success message
    deactivate Controller
end

@enduml
