@startuml

actor DPO
boundary "System Settings Screen" as Screen
participant "ExternalSystemController" as Controller
participant "ExternalSystemService" as Service
participant "UnitOfWork" as UoW
participant "ExternalSystemRepository" as SysRepo
participant "GroupRepository" as GroupRepo
participant "ExternalSystemPurposeRepository" as PurposeRepo
database "Database" as DB

DPO -> Screen : Click "Remove External System"
activate Screen
Screen -> Controller : RemoveSystem(systemId)
deactivate Screen
activate Controller

Controller -> Service : RemoveExternalSystem(systemId)
activate Service

' === Fetch the system ===
Service -> SysRepo : GetByIdAsync(systemId)
activate SysRepo
SysRepo -> DB : Invoke [SELECT] [ExternalSystems]
DB --> SysRepo : ExternalSystem
SysRepo --> Service : ExternalSystem
deactivate SysRepo

alt system is null
    Service --> Controller : Throw ArgumentException
    deactivate Service
    Controller --> Screen : Show error message
else check status
    alt status != WaitingForFIC
        activate Service
        Service --> Controller : Throw InvalidOperationException
        deactivate Service
        Controller --> Screen : Show error message
    else continue
        activate Service
        Service -> PurposeRepo : FindAsync(p => p.SystemId == systemId)
        activate PurposeRepo
        PurposeRepo -> DB : Invoke [SELECT] [ExternalSystemPurposes]
        DB --> PurposeRepo : List<Purposes>
        PurposeRepo --> Service : Purposes
        deactivate PurposeRepo

        alt purposes exist
            Service -> PurposeRepo : BulkDeleteAsync(purposes)
            activate PurposeRepo
            PurposeRepo -> DB : Invoke [DELETE] [ExternalSystemPurposes]
            DB --> PurposeRepo : OK
            PurposeRepo --> Service : Done
            deactivate PurposeRepo
        end

        ' === Find associated groups ===
        Service -> GroupRepo : FindAsync(g => g.SystemId == systemId)
        activate GroupRepo
        GroupRepo -> DB : Invoke [SELECT] [Groups]
        DB --> GroupRepo : List<Group>
        GroupRepo --> Service : Groups
        deactivate GroupRepo

        ' === Delete each group ===
        loop each group
            Service -> GroupRepo : DeleteAsync(group.Id)
            activate GroupRepo
            GroupRepo -> DB : Invoke [DELETE] [Groups]
            DB --> GroupRepo : OK
            GroupRepo --> Service : Done
            deactivate GroupRepo
        end

        ' === Delete system ===
        Service -> SysRepo : DeleteAsync(systemId)
        activate SysRepo
        SysRepo -> DB : Invoke [DELETE] [ExternalSystems]
        DB --> SysRepo : OK
        SysRepo --> Service : Done
        deactivate SysRepo

        ' === Commit transaction ===
        Service -> UoW : SaveChangesAsync()
        activate UoW
        UoW -> DB : COMMIT TRANSACTION
        DB --> UoW : OK
        UoW --> Service : Success
        deactivate UoW

        Service --> Controller : Done
        deactivate Service
        Controller --> Screen : Show success message
        deactivate Controller
    end
end

@enduml
