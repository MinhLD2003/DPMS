@startuml

actor DPO
boundary "Purpose List Screen" as Screen
participant "PurposeController" as Controller
participant "PurposeService" as Service
participant "BaseService<Purpose>" as BaseService
participant "BaseRepository<Purpose>" as Repo
database "Database" as DB

DPO -> Screen : Click "Delete" on purpose
activate Screen
Screen -> Controller : DeletePurpose(id)
deactivate Screen
activate Controller

' === Fetch purpose to validate status ===
Controller -> Service : GetByIdAsync(id)
activate Service
Service -> BaseService : GetByIdAsync(id)
activate BaseService
BaseService -> Repo : GetByIdAsync(id)
activate Repo
Repo -> DB : Invoke SELECT
activate DB
DB --> Repo : Purpose / null
deactivate DB
Repo --> BaseService : Purpose
deactivate Repo
BaseService --> Service : Purpose
deactivate BaseService
Service --> Controller : Purpose
deactivate Service

alt Purpose not found
    Controller --> Screen : Return 404 Not Found
    
else purpose exists
    alt Status != Draft
        Controller --> Screen : Return 400 BadRequest\n("Cannot delete an active purpose.")
        
    else Status is Draft
        Controller -> Service : DeleteAsync(id)
        activate Service
        Service -> BaseService : DeleteAsync(id)
        activate BaseService
        BaseService -> Repo : DeleteAsync(id)
        activate Repo
        Repo -> DB : Invoke DELETE
        activate DB
        DB --> Repo : OK
        deactivate DB
        Repo --> BaseService : true
        deactivate Repo
        BaseService --> Service : true
        deactivate BaseService
        Service --> Controller : true
        deactivate Service

        Controller --> Screen : Return 204 No Content
        deactivate Controller
    end
end

@enduml
