@startuml

class ConsentController {
    -_consentService : ConsentService
    -_systemService : ExternalSystemService

    +SubmitConsent(SubmitConsentRequestVM requestVM) : Task<ActionResult>
    -PolluteRequestData(SubmitConsentVM) : void
}

class ConsentService {
    +SubmitConsent(SubmitConsentVM consent) : Task
    +UpdateToken(string token) : Task
}

class SubmitConsentRequestVM {
    +UniqueIdentifier : string?
    +TokenString : string?
    +ConsentPurposes : List<ConsentPurposeVM>
}

class ConsentPurposeVM {
    +PurposeId : Guid
    +Status : bool
}

class SubmitConsentVM {
    +DataSubjectId : string?
    +Email : string
    +ConsentMethod : ConsentMethod
    +ConsentIp : string
    +ConsentUserAgent : string
    +PrivacyPolicyId : Guid
    +ExternalSystemId : Guid
}

enum ConsentMethod {
    WebForm
    Email
    Form
}

class PrivacyPolicyService {
}

abstract class BaseService {
    +FindAsync(Expression<Func<T, bool>> predicate) : Task<IEnumerable<T>>
}

ConsentController --> SubmitConsentRequestVM : "receives from client"
SubmitConsentRequestVM --> ConsentPurposeVM

ConsentController --> PrivacyPolicyService
ConsentController --> SubmitConsentVM : "pollute object with IP, UserAgent from request"
ConsentController --> ConsentService : "submits consent and invalidate old token"
PrivacyPolicyService --|> BaseService : "finds active privacy policy"
@enduml